/*
 * Click `Run` to execute the snippet below!
 */

// N -> signed 32 bit integer

// B^P
// B > 0, P > 1
// e.g input = 4, output = true 
// e.g. input = 6, output = false

// 1 to 10^9 

// 100 80 60 70 60 75 85
// Span
// 1 1 1 2 1 2 4 6

import java.io.*;
import java.util.*;

/*
 * To execute Java, please define "static void main" on a class
 * named Solution.
 *
 * If you need more classes, simply define them inline.
 */

// 1 2 3
// 4 5 6
// 7 8 9

class Solution {
  
  public static int[] spanOfStacks(int[] arr){
    
    if(arr.length ==0){
      return null;
    }
    int[] ans = new int[arr.length];
    ans[0] = 1;
    Stack <Integer> st = new Stack<>();
    st.push(0);
    for(int i=1;i<arr.length;i++){
      while(!st.isEmpty() && arr[st.peek()] <= arr[i]){
        st.pop();
      }
      ans[i] = (st.empty()) ? (i+1) : (i- st.peek());
      st.push(i);
    }
    for(int i=0;i<ans.length;i++){
      System.out.println(ans[i]);
      
    }
    return ans;
      
    
  }
  public static boolean checkPower(int n){
    
    if(n ==0 ){
      return false;
    }
    
    if(n ==1){
      return true;
    }
    
    int sq = (int) Math.sqrt(n);
    for(int i=2;i<= sq;i++){
      // int p =2;
      // double pow = Math.pow(i, p);
      long pow = i*i;
      while( pow <=n && pow>0){
        if(pow == n){
          return true;
        }
        // p++;
        pow = pow*i;
      }
    }
    
    // Time Complexity : O(sqrt(n)*32(Constnat)*log(n)  + O(logn)
    // n = 10^9 10^5. Sqrt(n)
    // Sqrt(n) + log(n)
    return false;
  }
  
  public static void main(String[] args) {
//     ArrayList<String> strings = new ArrayList<String>();
//     strings.add("Hello, World!");
//     strings.add("Welcome to CoderPad.");
//     strings.add("This pad is running Java " + Runtime.version().feature());

//     for (String string : strings) {
//       System.out.println(string);
//     }
    
    // System.out.println(checkPower(224));
    int[] arr = {100, 80, 60, 70, 60, 75, 85};
    
    int [] ans = spanOfStacks(arr);
    
    
  }
}

